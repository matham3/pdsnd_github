/* Question 1
Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.*/

SELECT f.title, cat.name type_of_film, COUNT(r.rental_id) rentale_count
  FROM category cat
       JOIN film_category fc ON cat.category_id = fc.category_id
       AND cat.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
       JOIN film f ON f.film_id = fc.film_id
       JOIN inventory inv ON f.film_id = inv.film_id
       JOIN rental r ON inv.inventory_id = r.inventory_id
 GROUP BY 1, 2
 ORDER BY 2, 1;

-------------------------
/*Question 2
Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.
*/

SELECT   c.name AS name_of_family , f.title AS flim_subject, f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile FROM film_category AS fcat
JOIN category c ON c.category_id = fcat.category_id
JOIN film f ON f.film_id = fcat.film_id

WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3 DESC ;


------------------------
/*Question 1:
We want to find out how the two stores compare in their count of rental orders during every month for all the years we have data for. Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.
*/

SELECT DATE_PART('month', rr.rental_date) mmonths, 
       DATE_PART('year', rr.rental_date) yyears,
       ss.store_id  Store_ID,
       COUNT(*)  Count_rentalss
  FROM store ss
       JOIN staff sa ON ss.store_id = sa.store_id
	JOIN rental rr ON sa.staff_id = rr.staff_id
 GROUP BY 1,
2,3
 ORDER BY 4 DESC;

 
------------------------
/* Question 2
We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?
*/

SELECT DATE_TRUNC('month', p.payment_date) pay_month, cus.first_name ||' '|| cus.last_name F_Name, COUNT(p.amount) pay_countpermon, SUM(p.amount) pay_amount
FROM customer cus
JOIN payment p ON p.customer_id = cus.customer_id 
WHERE cus.first_name ||' '|| cus.last_name IN

(SELECT t1.F_name FROM
(SELECT cus.first_name ||' '|| cus.last_name F_name, SUM(p.amount) amount_total
FROM customer cus
JOIN payment p ON p.customer_id = cus.customer_id

GROUP BY 1	
ORDER BY 2 DESC
LIMIT 10) t1) AND (p.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
GROUP BY 2, 1
ORDER BY 2, 1, 3 ;

------------------------
/*Question 3
Finally, for each of these top 10 paying customers, I would like to find out the difference across their monthly payments during 2007. Please go ahead and write a query to compare the payment amounts in each successive month. Repeat this for each of these 10 paying customers. Also, it will be tremendously helpful if you can identify the customer name who paid the most difference in terms of payments.
*/


WITH tab1 AS (SELECT (first_name||' '||last_name) AS name,
                   c.customer_id, p.amount, p.payment_date
              FROM customer AS c JOIN payment AS p ON c.customer_id = p.customer_id),

tab2 AS (SELECT tab1.customer_id  FROM tab1 GROUP BY 1   ORDER BY SUM(tab1.amount) DESC LIMIT 10),


tab3 AS (SELECT tab1.name,
              DATE_PART('month', tab1.payment_date) AS month_of_payment, 
              DATE_PART('year', tab1.payment_date) AS year_of_payment,
              COUNT (*),
              SUM(tab1.amount),
              SUM(tab1.amount) AS total,
              LEAD(SUM(tab1.amount)) OVER(PARTITION BY tab1.name ORDER BY DATE_PART('month', tab1.payment_date)) AS lead,
              LEAD(SUM(tab1.amount)) OVER(PARTITION BY tab1.name ORDER BY DATE_PART('month', tab1.payment_date)) - SUM(tab1.amount) AS lead_dif
         FROM tab1 JOIN tab2 ON tab1.customer_id = tab2.customer_id
         WHERE year(tab1.payment_date)  = '2007'
        GROUP BY 1, 2, 3)
                                                                                
SELECT  tab3.name , tab3.month_of_payment ,tab3.year_of_payment ,tab3.lead_dif ,tab3.count ,tab3.sum ,tab3.total ,
       CASE WHEN tab3.lead_dif = (SELECT MAX(tab3.lead_dif) FROM tab3 ORDER BY 1 DESC LIMIT 1) THEN 'the maximum'
        ELSE NULL END AS is_max 
FROM tab3
ORDER BY tab3.lead_dif DESC;



